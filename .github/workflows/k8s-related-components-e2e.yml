name: Test Kubernetes Related Components

on:
  pull_request:
    branches:
      - main

jobs:
  kubernetes-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19    
      - name: Install dependencies
        if: steps.go-cache.outputs.cache-hit != 'true'
        run: make -j2 gomoddownload
      - name: Install Tools
        if: steps.go-cache.outputs.cache-hit != 'true'
        run: make install-tools
      - name: Build Collector
        run: make GOOS=linux GOARCH=amd64 otelcontribcol
      - name: Build Docker Image
        run: |
            make docker-otelcontribcol
            echo otel/opentelemetry-collector-contrib-dev:$GITHUB_SHA
            docker tag otelcontribcol:latest otel/opentelemetry-collector-contrib-dev:$GITHUB_SHA
      - name: Set up Helm
        uses: azure/setup-helm@v3.5
        with:
          version: v3.9.0
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.3.0
      - name: Create kind cluster
        uses: helm/kind-action@v1.5.0
      - name: Check kind
        run: |
          kubectl cluster-info --context kind-chart-testing
          kubectl get node
          docker ps -a --filter label=io.x-k8s.kind.cluster=chart-testing
      # - name: Check kind
      #   run: |
      #     kind --version
      #     kubectl cluster-info --context chart-testing
      #     kubectl get node
      #     docker ps -a
      #     docker ps --help
      #     docker --version
      #     docker ps -a --filter label=io.x-k8s.kind.cluster=chart-testing
      #     export CONTAINERID=$(docker ps | grep -v IMAGE | awk '{print $1}')
      #     echo container id ${CONTAINERID}
      #     docker inspect ${CONTAINERID}
      #     docker inspect ${CONTAINERID} --format='{{ .Config.Labels }}'
      - name: Kind load image
        run: |
          kind load docker-image otel/opentelemetry-collector-contrib-dev:$GITHUB_SHA --name chart-testing
      - name: Add Dependencies
        shell: bash
        run: |
            helm repo add open-telemetry https://open-telemetry.github.io/opentelemetry-helm-charts
      - uses: actions/checkout@v3
        with:
          repository: 'open-telemetry/opentelemetry-helm-charts'
          path: opentelemetry-helm-charts
      - name: Helm install collector
        run: helm install test --set image.tag=$GITHUB_SHA -f .github/workflows/k8s-related-components-e2e-collector-values.yml opentelemetry-helm-charts/charts/opentelemetry-collector
      - name: check collector status
        run: |
          sleep 30s
          kubectl -n default get pod test-opentelemetry-collector-0 -o wide
      - name: start telemetrygen job
        run: |
          kubectl -n default create -f .github/workflows/k8s-related-components-e2e-telemetrygen-job.yaml
      - name: check telemetrygen job status
        run: |
          sleep 60s
          kubectl -n default get pod -l component=test-telemetrygen
      - name: copy trace output
        run: |
          kubectl cp -c filecp default/test-opentelemetry-collector-0:tmp/trace.json processor/k8sattributesprocessor/testdata/trace.json
      - name: run e2e test to check output
        run: |    
          cd processor/k8sattributesprocessor
          go test -v --run TestJobE2E